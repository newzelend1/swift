//1. Написать функцию, которая определяет, четное число или нет.
var Array = [12, 23, 83, 5222, 377, 93,]
for rest in Array{
    if rest % 2 == 0 {
        print("\(rest) четное число")
    } else {
        print("\(rest) нечетное число")
    }
}


func number (_ number1: Int){
    if number1 % 2 == 0 {
        print ("четное число")
    }else {
        print("нечетное число")
    }
}
number(10)

//2. Написать функцию, которая определяет, делится ли число без остатка на 3.


func number2 (_ number1: Int){
    if number1 % 3 == 0 {
        print ("число делиться на три без остатка")
    }else {
        print("число делиться на три с отсатком")
    }
}
number2(15)

    
//3. Создать возрастающий массив из 100 чисел.

var onehundred: [Int] = []
for i in 1...100 {
    onehundred.append(i)
}
print(onehundred)


number2(10)
//4. Удалить из этого массива все четные числа и все числа, которые не делятся на 3.

var newArray: [Int] = []
for i in 1...100 {
    onehundred.append(i)
    if (i % 3 != 0)&&(i % 2 == 1) {
        
        print("\(i)")
    }
}



//5. * Написать функцию, которая добавляет в массив новое число Фибоначчи, и добавить при помощи нее 50 элементов.
//Числа Фибоначчи определяются соотношениями Fn=Fn-1 + Fn-2.
func fibonachi(_ count: Int) -> [Double] {
    var newArray: [Double] = []
    if count == 1 {
        let f0: Double = 0 
        newArray.append(f0)
    } else if count == 2 {
        let f1: Double = 1
        let f0: Double = 0 
        newArray.append(f0)
        newArray.append(f1)
    } else {
        let f1: Double = 1 
        let f0: Double = 0 
        newArray.append(f0)
        newArray.append(f1)
    }
    var n = 2 
    while n < count + 2 {
    let n1 = (newArray[n-1]) + (newArray[n-2])
    newArray.append(n1)
    n+=1
}
    return newArray 
}

print (fibonachi(50))






//6. * Заполнить массив из 100 элементов различными простыми числами. Натуральное число, большее единицы, называется простым, если оно делится только на себя и на единицу. Для нахождения всех простых чисел не больше заданного числа n, следуя методу Эратосфена, нужно выполнить следующие шаги:
//a. Выписать подряд все целые числа от двух до n (2, 3, 4, ..., n).
//b. Пусть переменная p изначально равна двум — первому простому числу.
//c. Зачеркнуть в списке числа от 2 + p до n, считая шагом p..
//d. Найти первое не зачёркнутое число в списке, большее, чем p, и присвоить значению переменной p это число.
//e. Повторять шаги c и d, пока возможно.

func isMultiple(_ num: Int, of divider: Int) -> Bool {
    return num % divider == 0 
}

var integers: [Int] = []
while integers.count != 10 {
    integers.append(integers.count+2)
}

var p: Int 
var index = 0 
while index < integers.count - 1 {
    p = integers[index]

for num in integers {
    if (num != p) && isMultiple(num, of: p){
        integers.remove(at: integers.index(of: num)!)
    }
}
    index += 1 
}
print(integers)
